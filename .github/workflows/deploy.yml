name: Deploy to Kubernetes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: docker.io
  FRONTEND_IMAGE: testapp3wow-ux/buyc-frontend
  BACKEND_IMAGE: testapp3wow-ux/buyc-backend
  K8S_NAMESPACE: buyc-corp

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:${{ github.sha }},${{ env.FRONTEND_IMAGE }}:latest

      - name: Build and push Backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:${{ github.sha }},${{ env.BACKEND_IMAGE }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/mongodb.yaml -n ${{ env.K8S_NAMESPACE }}
          kubectl apply -f k8s/backend.yaml -n ${{ env.K8S_NAMESPACE }}
          kubectl apply -f k8s/frontend.yaml -n ${{ env.K8S_NAMESPACE }}
          
      - name: Update deployment images
        run: |
          kubectl set image deployment/frontend frontend=${{ env.FRONTEND_IMAGE }}:${{ github.sha }} -n ${{ env.K8S_NAMESPACE }}
          kubectl set image deployment/backend backend=${{ env.BACKEND_IMAGE }}:${{ github.sha }} -n ${{ env.K8S_NAMESPACE }}

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/frontend -n ${{ env.K8S_NAMESPACE }}
          kubectl rollout status deployment/backend -n ${{ env.K8S_NAMESPACE }}